
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-server
  labels:
    app: goapi
spec:
  replicas: 3
  selector:
    matchLabels:
      app: goapi
  template:
    metadata:
      labels:
        app: goapi
    spec:
      imagePullSecrets:
      - name: pipeline-docker-registry
      containers:
      - name: goapi
        image: ${CICD_IMAGE}:${CICD_EXECUTION_SEQUENCE}
        ports:
        - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: go-service
spec:
  selector:
    app: goapi
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---

---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: go-ingress-route
spec:
  entryPoints:
    - web # 1. Onde o Traefik deve "ouvir"
  routes:
    - match: Host(`go.rancher.vini.skyone.guru`) # 2. Condição para rotear
      kind: Rule
      services:
        # APONTE PARA O SEU SERVICE DO KUBERNETES AQUI!
        - name: go-service # <--- O NOME DO SEU SERVICE "go-service"
          port: 80         # <--- A PORTA DO SEU SERVICE "go-service"
          kind: KubernetesService # Não precisa especificar, é o padrão


